@charset "UTF-8";


* {
	box-sizing: border-box;
	margin: 1px;
	padding: 0;
}

.container {
	max-width: 1240px;
	margin: 0 auto;
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 8fr 30fr 30fr 30px;
	grid-gap: 20px;

	/*
    화면의 전체적인 틀은 grid 를 이용하여 틀을 잡고
    grid 안에 있는 item 들의 내부는 flex를 이용하여
    구성할 예정
    */
	/*
    최대 크기 1240은 그냥 유지 그것보다 작아지면
    너비의 90%를 사용하겠다라는 의미 
    columns : 한 줄 씩 사용해라 
    rows auto : 안에 있는 콘텐츠 만큼 자동으로 나와라
    
    절반 화면 기준
    */
}

.container div {
	
}

.card {
	background-color: green;
	background: #fff;
	text-decoration: none;
	color: #444;
	box-shadow: 0 2px 5px rgba(0, 0, 0, .1);
	display: flex;
	min-height: 100%;
	/* 부모 item에서의 높이를 100% 다 써라*/
	flex-direction: column;
	/* flex의 기본 값은 가로인데 그것을 세로로 바꿔라*/
	justify-content: space-between;
	/* 위 아래로 딱 붙게 만드는 것*/
	flex-wrap: nowrap;
}

.item-1 {
	display: flex;
	flex-direction: column;
}

.log_join {
	text-align: right;
}

.logout, .mypage {
	width: 70px;
	cursor: pointer;
	border: 0;
	border-radius: 5px;
}

.item-2 {
	display: grid;
	grid-template-columns: 25% 50% 25%;
	grid-template-rows: auto;
	font-size: auto;
}

.w_1 {
	grid-column: 1/2;
	word-break: break-all;
}

.w_2 {
	grid-column: 2/3;
}

.w_2 img {
	width: 100%;
	height: 100%;
}

.w_3 {
	grid-column: 3/4;
}

.w_4 {
	grid-column: 1/4;
	display: flex;
	text-align: center;
}

.w_4 div {
	flex: 1;
	margin: 3%;
	font-size: 25px;
}

.w_4_a {
	display: flex;
	flex-direction: column;
}

.w_4_a img {
	margin-top: 15%;
	width: 60%;
	height: 60%;
}

.item-3 {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: auto;
}

.o_1 {
	margin: 3%;
}

.o_1 img {
	width: 100%;
	height: 100%;
}

figure.snip1200 {
	position: relative;
	overflow: hidden;
	width: 100%;
	height: 100%;
	text-align: center;
	font-size: 26px;
}

figure.snip1200:hover {
	transition: 1s;
}

figure.snip1200 * {
	box-sizing: border-box;
	transition: all 0.45s ease-in-out;
}

figure.snip1200 img {
	max-width: 80%;
	position: relative;
	opacity: 1;
}

figure.snip1200 figcaption.o {
	position: absolute;
	top: 5%;
	left: 7%;
	right: 7%;
	bottom: 5%;
}

figure.snip1200 .heading_o {
	overflow: hidden;
	transform: translateY(50%);
	position: absolute;
	bottom: 5%;
	width: 100%;
}

figure.snip1200:hover .heading {
	bottom: 0;
}

figure.snip1200 h1 {
	display: table;
	margin: 0 auto;
	padding: 0 10px;
	position: relative;
	text-align: center;
	width: auto;
	text-transform: uppercase;
	font-weight: 400;
}

figure.snip1200 h1 span {
	font-weight: 800;
}

div.w_data_o {
	position: relative;
	opacity: 0;
	display: flex;
	height: 80%;
	flex-flow: row wrap;
	/*border: 1px solid red;*/
	overflow: auto;
}
div.w_data_o::-webkit-scrollbar{
	width:10px;
	background-color: transparent;
	
}
div.w_data_o::-webkit-scrollbar-thumb{
	background-color: #2f3542;
	
}

div.w_data_div_o {
	position: inherit;
	flex: 1 1 35%;
	/*border: 2px solid green;*/
	text-align: center;
	margin: 0 10px;
	flex-wrap: wrap;
	padding-top: 1%;
}

div.w_data_div_o img {
	width: 50%;
	/*border: 1px solid paleturquoise;*/
}

figure.snip1200:hover img.clothes, figure.snip1200:hover p {
	opacity: 0;
}

figure.snip1200:hover div.w_data, figure.snip1200:hover div.w_data_o {
	opacity: 1;
	-webkit-transition-delay: 0.45s;
	transition-delay: 0.45s;
}

@media screen and (min-width:1000px) {
	.container {
		grid-template-columns: 1fr 1fr;
		grid-template-rows: 25fr 90fr 30px;
	}
	/*
    전체화면 기준은 화면을 절반을 나눈 형태
    ㅁㅁ
    ㅁㅁ
    이런 식으로 사용하겠다는 의미
    */
	.item-1 {
		grid-column: 1/3;

		/*
        == grid-column: 1/ span 2;
        .item-1 은 첫번째 줄을 다 사용하겠다는 의미 
        head로 사용 예정
        */
	}
	.item-2 {
		grid-template-columns: 20% 60% 20%;
		grid-template-rows: 2fr 1fr;
	}
	.item-4 {
		grid-column: 1/3;
		/*
        .item-4는 마지막 줄을 다 사용하겠다는 의미 
        footer로 사용 예정
        */
	}
}

/*
.thumb {height를 따로 지정해주지 않았지만 부모가 만들어준 높이안에서 padding 60%를 사용해서 지정 ??
	background-size:cover;부모가 만들어준 높이를 cover 해라 background-position:centercenter;
	
}*/
article {
	flex: 1 1=> 원래는 1 1 0 넘치는 걸 줄여서 쓰는 속성 모자란 걸 늘려서 쓰는 속성??
  넘치는 모자른 속성을 채울 땐 flex: 1? 무슨 소린지 이해해보기 flex:1;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	padding: 15px;
}

article p {
	flex: 1;
}